#include <AudioAnalyzer.h>
#include <U8g2lib.h> 

U8G2_SSD1306_128X64_NONAME_F_HW_I2C u8g2(U8G2_R0); 
Analyzer Audio = Analyzer(4,5, A0);

byte audio_bar_height[7]; 
byte audio_bar_peak[7]; 
int FreqVal[7];

const unsigned char upir_logo [] PROGMEM = {    
  0xEA, 0x3A, 0xAA, 0x28, 0x6A, 0x1A, 0x26, 0x2A, };

const int sampleWindow = 50;                              
unsigned int sample;
 
#define SENSOR_PIN A1

void setup() {
  u8g2.setColorIndex(1);  
  u8g2.begin(); 
  Serial.begin(57600);
  Audio.Init();
  pinMode (SENSOR_PIN, INPUT);
}

void loop() { 
  Audio.ReadFreq(FreqVal);
                          
  u8g2.clearBuffer();  

  for (int i=0; i<7; i++) { 
    audio_bar_height[i] = map(max((FreqVal[i]-100),0), 0, 1024, 0, 53);

    if (audio_bar_peak[i] < audio_bar_height[i]) { 
      audio_bar_peak[i] = audio_bar_height[i];     } 
    else if (audio_bar_peak[i] > audio_bar_height[i]) {
      audio_bar_peak[i]--; /    }

    u8g2.drawBox(2 + i*19, 53-audio_bar_height[i], 10, audio_bar_height[i]); 
    u8g2.drawBox(2 + i*19, 53-audio_bar_peak[i], 10, 1); 
  }

  u8g2.setFont(u8g2_font_nerhoe_tr); 
  u8g2.drawStr(  2, 64, "63");
  u8g2.drawStr( 19, 64, "160");
  u8g2.drawStr( 37, 64, "400");
  u8g2.drawStr( 60, 64, "1K");
  u8g2.drawStr( 75, 64, "2.5K");
  u8g2.drawStr( 95, 64, "6.3K");
  u8g2.drawStr(115, 64, "16K");        

  u8g2.drawXBMP(0, 0, 16, 4, upir_logo);  

  u8g2.sendBuffer(); 
for(int i=0;i<7;i++)          
  {
    Serial.print(max((FreqVal[i]-100),0));
    Serial.print("|");
  }

  unsigned long startMillis= millis();                   
  float peakToPeak = 0;                                  
 
  unsigned int signalMax = 0;                            
  unsigned int signalMin = 1024; 

  while (millis() - startMillis < sampleWindow){
      sample = analogRead(SENSOR_PIN);                    
      if (sample < 1024){
         if (sample > signalMax){
            signalMax = sample;                           
         }
         else if (sample < signalMin){
            signalMin = sample;                           
         }
      }
   }
 
  peakToPeak = signalMax - signalMin;
  int db = -20 + 26.1*(log10(peakToPeak)/log10(2.718));                  
 
  Serial.print(db+30);
  Serial.println(" ");
  
  delay(500);
while (millis() - startMillis < sampleWindow)
   {
      sample = analogRead(SENSOR_PIN);                    
      if (sample < 1024)                                  
      {
         if (sample > signalMax)
         {
            signalMax = sample;                           
         }
         else if (sample < signalMin)
         {
            signalMin = sample;                           
         }
      }
   }
 
  peakToPeak = signalMax - signalMin;
  int db = -20 + 26.1*(log10(peakToPeak)/log10(2.718));                  
 
  Serial.print(db+30);
  Serial.println(" ");
  delay(500);
}
